/******************************************************************************
██████   ██████  ██    ██ ████████ ██ ███    ██  ██████
██   ██ ██    ██ ██    ██    ██    ██ ████   ██ ██
██████  ██    ██ ██    ██    ██    ██ ██ ██  ██ ██   ███
██   ██ ██    ██ ██    ██    ██    ██ ██  ██ ██ ██    ██
██   ██  ██████   ██████     ██    ██ ██   ████  ██████
******************************************************************************/
console.log('up and running!');
var express = require("express");
var app = express();
var http = require("http").Server(app);
app.use(express.static("public"));
http.listen(process.env.PORT || 5000);

/******************************************************************************
 ██████  ████████ ██   ██ ███████ ██████      ██████  ███████ ██████  ███████
██    ██    ██    ██   ██ ██      ██   ██     ██   ██ ██      ██   ██ ██
██    ██    ██    ███████ █████   ██████      ██   ██ █████   ██████  ███████
██    ██    ██    ██   ██ ██      ██   ██     ██   ██ ██      ██           ██
 ██████     ██    ██   ██ ███████ ██   ██     ██████  ███████ ██      ███████
******************************************************************************/
//none atm

/******************************************************************************
███████  ██████   ██████ ██   ██ ███████ ████████ ██  ██████
██      ██    ██ ██      ██  ██  ██         ██    ██ ██    ██
███████ ██    ██ ██      █████   █████      ██    ██ ██    ██
     ██ ██    ██ ██      ██  ██  ██         ██    ██ ██    ██
███████  ██████   ██████ ██   ██ ███████    ██ ██ ██  ██████
******************************************************************************/
var io = require("socket.io")(http);
var sockets = [];

io.on("connection", function(socket) {
  console.log("a user has connected");
  console.log(socket);
  sockets.push(socket);
  socket.socketId = sockets.length-1;

  // disconnect
  socket.on("disconnect", () => {
    sockets.splice(socket.socketId, 1);
    // TODO: delete paired socket reference if necessary
    for(var i = 0; i < sockets.length; i++) {
      sockets[i].socketId--;
    }
    console.log("a user has disconnected");
  });
});
